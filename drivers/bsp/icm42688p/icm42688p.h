#ifndef __BSP_ICM42688P_H_
#define __BSP_ICM42688P_H_

#include "at32f403a_407.h"

// Bank0
#define ICM42688P_DEVICE_CONFIG 0x11
#define ICM42688P_DRIVE_CONFIG 0x13
#define ICM42688P_INT_CONFIG 0x14
#define ICM42688P_FIFO_CONFIG 0x16
#define ICM42688P_TEMP_DATA1 0x1D
#define ICM42688P_TEMP_DATA0 0x1E
#define ICM42688P_ACCEL_DATA_X1 0x1F
#define ICM42688P_ACCEL_DATA_X0 0x20
#define ICM42688P_ACCEL_DATA_Y1 0x21
#define ICM42688P_ACCEL_DATA_Y0 0x22
#define ICM42688P_ACCEL_DATA_Z1 0x23
#define ICM42688P_ACCEL_DATA_Z0 0x24
#define ICM42688P_GYRO_DATA_X1 0x25
#define ICM42688P_GYRO_DATA_X0 0x26
#define ICM42688P_GYRO_DATA_Y1 0x27
#define ICM42688P_GYRO_DATA_Y0 0x28
#define ICM42688P_GYRO_DATA_Z1 0x29
#define ICM42688P_GYRO_DATA_Z0 0x2A
#define ICM42688P_TMST_FSYNCH 0x2B
#define ICM42688P_TMST_FSYNCL 0x2C
#define ICM42688P_INT_STATUS 0x2D
#define ICM42688P_FIFO_COUNTH 0x2E
#define ICM42688P_FIFO_COUNTL 0x2F
#define ICM42688P_FIFO_DATA 0x30
#define ICM42688P_APEX_DATA0 0x31
#define ICM42688P_APEX_DATA1 0x32
#define ICM42688P_APEX_DATA2 0x33
#define ICM42688P_APEX_DATA3 0x34
#define ICM42688P_APEX_DATA4 0x35
#define ICM42688P_APEX_DATA5 0x36
#define ICM42688P_INT_STATUS2 0x37
#define ICM42688P_INT_STATUS3 0x38
#define ICM42688P_SIGNAL_PATH_RESET 0x4B
#define ICM42688P_INTF_CONFIG0 0x4C
#define ICM42688P_INTF_CONFIG1 0x4D
#define ICM42688P_PWR_MGMT0 0x4E
#define ICM42688P_GYRO_CONFIG0 0x4F
#define ICM42688P_ACCEL_CONFIG0 0x50
#define ICM42688P_GYRO_CONFIG1 0x51
#define ICM42688P_GYRO_ACCEL_CONFIG0 0x52
#define ICM42688P_ACCEL_CONFIG1 0x53
#define ICM42688P_TMST_CONFIG 0x54
#define ICM42688P_APEX_CONFIG0 0x56
#define ICM42688P_SMD_CONFIG 0x57
#define ICM42688P_FIFO_CONFIG1 0x5F
#define ICM42688P_FIFO_CONFIG2 0x60
#define ICM42688P_FIFO_CONFIG3 0x61
#define ICM42688P_FSYNC_CONFIG 0x62
#define ICM42688P_INT_CONFIG0 0x63
#define ICM42688P_INT_CONFIG1 0x64
#define ICM42688P_INT_SOURCE0 0x65
#define ICM42688P_INT_SOURCE1 0x66
#define ICM42688P_INT_SOURCE3 0x68
#define ICM42688P_INT_SOURCE4 0x69
#define ICM42688P_FIFO_LOST_PKT0 0x6C
#define ICM42688P_FIFO_LOST_PKT1 0x6D
#define ICM42688P_SELF_TEST_CONFIG 0x70
#define ICM42688P_WHO_AM_I 0x75
#define ICM42688P_REG_BANK_SEL 0x76

// Bank1
#define ICM42688P_SENSOR_CONFIG0 0x03
#define ICM42688P_GYRO_CONFIG_STATIC2 0x0B
#define ICM42688P_GYRO_CONFIG_STATIC3 0x0C
#define ICM42688P_GYRO_CONFIG_STATIC4 0x0D
#define ICM42688P_GYRO_CONFIG_STATIC5 0x0E
#define ICM42688P_GYRO_CONFIG_STATIC6 0x0F
#define ICM42688P_GYRO_CONFIG_STATIC7 0x10
#define ICM42688P_GYRO_CONFIG_STATIC8 0x11
#define ICM42688P_GYRO_CONFIG_STATIC9 0x12
#define ICM42688P_GYRO_CONFIG_STATIC10 0x13
#define ICM42688P_XG_ST_DATA 0x5F
#define ICM42688P_YG_ST_DATA 0x60
#define ICM42688P_ZG_ST_DATA 0x61
#define ICM42688P_TMSTVAL0 0x62
#define ICM42688P_TMSTVAL1 0x63
#define ICM42688P_TMSTVAL2 0x64
#define ICM42688P_INTF_CONFIG4 0x7A
#define ICM42688P_INTF_CONFIG5 0x7B
#define ICM42688P_INTF_CONFIG6 0x7C

// Bank2
#define ICM42688P_ACCEL_CONFIG_STATIC2 0x03
#define ICM42688P_ACCEL_CONFIG_STATIC3 0x04
#define ICM42688P_ACCEL_CONFIG_STATIC4 0x05
#define ICM42688P_XA_ST_DATA 0x3B
#define ICM42688P_YA_ST_DATA 0x3C
#define ICM42688P_ZA_ST_DATA 0x3D

// Bank3
#define ICM42688P_CLKDIV 0x2A

// Bank4
#define ICM42688P_APEX_CONFIG1 0x40
#define ICM42688P_APEX_CONFIG2 0x41
#define ICM42688P_APEX_CONFIG3 0x42
#define ICM42688P_APEX_CONFIG4 0x43
#define ICM42688P_APEX_CONFIG5 0x44
#define ICM42688P_APEX_CONFIG6 0x45
#define ICM42688P_APEX_CONFIG7 0x46
#define ICM42688P_APEX_CONFIG8 0x47
#define ICM42688P_APEX_CONFIG9 0x48
#define ICM42688P_ACCEL_WOM_X_THR 0x4A
#define ICM42688P_ACCEL_WOM_Y_THR 0x4B
#define ICM42688P_ACCEL_WOM_Z_THR 0x4C
#define ICM42688P_INT_SOURCE6 0x4D
#define ICM42688P_INT_SOURCE7 0x4E
#define ICM42688P_INT_SOURCE8 0x4F
#define ICM42688P_INT_SOURCE9 0x50
#define ICM42688P_INT_SOURCE10 0x51
#define ICM42688P_OFFSET_USER0 0x77
#define ICM42688P_OFFSET_USER1 0x78
#define ICM42688P_OFFSET_USER2 0x79
#define ICM42688P_OFFSET_USER3 0x7A
#define ICM42688P_OFFSET_USER4 0x7B
#define ICM42688P_OFFSET_USER5 0x7C
#define ICM42688P_OFFSET_USER6 0x7D
#define ICM42688P_OFFSET_USER7 0x7E
#define ICM42688P_OFFSET_USER8 0x7F

typedef enum
{
    GYRO_FS_SEL_2000DPS,
    GYRO_FS_SEL_1000DPS,
    GYRO_FS_SEL_500DPS,
    GYRO_FS_SEL_250DPS,
    GYRO_FS_SEL_125DPS,
    GYRO_FS_SEL_62_5DPS,
    GYRO_FS_SEL_31_25DPS,
    GYRO_FS_SEL_15_725DPS,
} GYRO_FS_SEL;

typedef enum
{
    GYRO_ODR_SEL_32KHZ = 1,
    GYRO_ODR_SEL_16KHZ,
    GYRO_ODR_SEL_8KHZ,
    GYRO_ODR_SEL_4KHZ,
    GYRO_ODR_SEL_2KHZ,
    GYRO_ODR_SEL_1KHZ,
    GYRO_ODR_SEL_200HZ,
    GYRO_ODR_SEL_100HZ,
    GYRO_ODR_SEL_50HZ,
    GYRO_ODR_SEL_25HZ,
    GYRO_ODR_SEL_12_5HZ,
    GYRO_ODR_SEL_500HZ = 15,
} GYRO_ODR_SEL;

typedef enum
{
    ACCEL_FS_16G,
    ACCEL_FS_8G,
    ACCEL_FS_4G,
    ACCEL_FS_2G,
} ACCEL_FS_SEL;

typedef enum
{
    ACCEL_ODR_SEL_32KHZ = 1,
    ACCEL_ODR_SEL_16KHZ,
    ACCEL_ODR_SEL_8KHZ,
    ACCEL_ODR_SEL_4KHZ,
    ACCEL_ODR_SEL_2KHZ,
    ACCEL_ODR_SEL_1KHZ,
    ACCEL_ODR_SEL_200HZ,
    ACCEL_ODR_SEL_100HZ,
    ACCEL_ODR_SEL_50HZ,
    ACCEL_ODR_SEL_25HZ,
    ACCEL_ODR_SEL_12_5HZ,
    ACCEL_ODR_SEL_6_25HZ,
    ACCEL_ODR_SEL_3_125HZ,
    ACCEL_ODR_SEL_1_5625HZ,
    ACCEL_ODR_SEL_500HZ,
} ACCEL_ODR_SEL;

typedef enum
{
    GYRO_NF_BW_1499HZ,
    GYRO_NF_BW_680HZ,
    GYRO_NF_BW_329HZ,
    GYRO_NF_BW_162HZ,
    GYRO_NF_BW_80HZ,
    GYRO_NF_BW_40HZ,
    GYRO_NF_BW_20HZ,
    GYRO_NF_BW_10HZ,
} GYRO_NF_BW;

typedef enum
{
    ODR_1st,
    ODR_2nd,
    ODR_3rd
} UI_FILTER_ODR;

typedef enum
{
    BW0,
    BW1,
    BW2,
    BW3,
    BW4,
    BW5,
    BW6,
    BW7,
    BW14 = 14,
    BW15,
} UI_FILTER_BW;

typedef enum
{
    BANK0,
    BANK1,
    BANK2,
    BANK3,
    BANK4,
} BANK_SEL;

#ifdef __cplusplus
extern "C"
{
#endif

    void icm42688p_init(void);
    void icm42688p_start(void);
    void icm42688p_set_lowpass_filter(UI_FILTER_ODR odr, UI_FILTER_BW bw);
    void icm42688p_set_Notch_filter(uint32_t nf_freq, GYRO_NF_BW bw);
    void icm42688p_set_Anti_alias_filter(uint32_t aaf_bw);
    void icm42688p_acc_config(ACCEL_FS_SEL acc_fs_sel, ACCEL_ODR_SEL acc_odr_sel);
    void icm42688p_gyro_config(GYRO_FS_SEL gyro_fs_sel, GYRO_ODR_SEL gyro_odr_sel);
    void icm42688p_set_bank(BANK_SEL bank_sel);
    void icm42688p_get_data(float* _temp, float* AccX, float* AccY, float* AccZ, float* GyroX, float* GyroY,
                            float* GyroZ);
#ifdef __cplusplus
}
#endif

#endif